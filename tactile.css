/**
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * tactile implementation : Â© <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * tactile.css
 *
 * tactile stylesheet
 *
 */

 *,
 *::before,
 *::after {
     box-sizing: border-box;
 }
 
 :root {
 
     --tile-dim: 75px;
     --num-tiles-to-offset: 4; /* change to 8 for colorblind tiles */
     --solid-tile-offset: calc(var(--tile-dim)*var(--num-tiles-to-offset) * -1); 
     --board-dim: calc(var(--tile-dim)*6 + (2px*6) + 20px);
     --card-width: 80px;
     --card-height: 120px;
     --store-width: calc((var(--card-width) + 5px ) * 3 + 25px);
     --action-board-width: 128px;
     --action-board-height: 183px;
     --action-board-selection-dim: 25px;
     --resource-dim: 25px;
     --action-icon-width: 104px; /* these get shrunk via transform, but they come in this size */
     --action-icon-height: 128px;

     --highlight-color: rgba(23, 197, 66, 0.856);
     --panel-color: #eeeeee;
 
     /* z-index values */
     --z-index-deck: 3 ;
     --z-index-piece: 1;
     --z-index-card: 2;
 }
 
 .addSpace { margin: 5px; }
 .addSpaceSmall { margin: 2px; }

 /* #overall-content {
    background: url(img/background.jpg) 0 0;
 }  */
 
 /* Top container styles */
 #ttTopContainer {
     display: flex;
     height: var(--board-dim);
     margin-bottom: 20px;
 }
 
 /* Store styles */
 .store {
     position: absolute;
     display: flex;
     align-items: center;
     flex-direction: column;
     left: 10px;
     width: var(--store-width);
     height: var(--board-dim);
     background-color: var(--panel-color);  
     border-radius: 4px;
     margin-top: 10px;
     padding-right:4px;
 }
 
 /* Deck styles */
 .deck {
     z-index: var(--z-index-deck);
     height: var(--card-height);
     width: var(--card-width);
     background: url(img/card_back_small.png) 0 0;
     position: relative;
     box-shadow: 3px 3px 3px #444;
     border-radius: 4px;
     margin-top: 10px !important;
 }
 
 .deck::before,
 .deck::after {
     content: '';
     position: absolute;
     height: 100%;
     width: 100%;
     background: url(img/card_back_small.png) 0 0;
     box-shadow: 3px 3px 3px #444;
     border-radius: 4px;
 }
 
 .deck::before {
     top: -3px;
     left: -3px;
     z-index: calc(var(--z-index-deck) - 1);
 }
 
 .deck::after {
     top: -6px;
     left: -6px;
     z-index: calc(var(--z-index-deck) - 2);
 }
    
 .cardRow {
     width: 100%;
     display: flex;
     justify-content: space-between;
     align-items: center;
     flex-direction: row;
 }
 
 /* Board styles */
 .board {
     position: absolute;
     left: calc(var(--store-width) + 20px);
     width: var(--board-dim);
     height: var(--board-dim);
     background-color: var(--panel-color);
     margin-top: 10px;
     padding: 10px;
     font-size: 0; /* remove space between inline-block elements */
     border-radius:4px;
 }
 
 .playingPiece {
    position: absolute;
    top:0px;
    left: 0px;
    width: var(--tile-dim);
    height: var(--tile-dim);
    filter: drop-shadow(1px 4px 2px rgba(0,0,0,.6));
    z-index: var(--z-index-piece);
 }
 
 .playingPiece.red
 {
     background: url(img/player_pieces.png) 0 0 no-repeat;
 }
 
 .playingPiece.yellow
 {
     background: url(img/player_pieces.png) calc(var(--tile-dim) * -1) 0 no-repeat;
 }
 
 .playingPiece.green
 {
     background: url(img/player_pieces.png) calc(var(--tile-dim) * -2) 0 no-repeat;
 }
 
 .playingPiece.blue
 {
     background: url(img/player_pieces.png) calc(var(--tile-dim) * -3) 0 no-repeat;
 }
 
 .playingPiece.highlighted
 {
    filter: drop-shadow(3px 3px 2px rgba(255,255,255,1))
            drop-shadow(-3px 3px 2px rgba(255,255,255,1))
            drop-shadow(3px -3px 2px rgba(255,255,255,1))
            drop-shadow(-3px -3px 2px rgba(255,255,255,1));
 }
 

 .tile {
    position: relative;
     width: var(--tile-dim);
     height: var(--tile-dim);
     display: inline-block;
     margin: 1px;
 }
 
 .tile.redHome
 {
     background: url(img/tiles_small.png) 0 0 no-repeat;
     border: 1px solid black;
 }

 .tile.yellowHome
 {
     background: url(img/tiles_small.png) calc(var(--tile-dim) * -1) 0 no-repeat;
     border: 1px solid black;
 }

 .tile.greenHome
 {
     background: url(img/tiles_small.png) calc(var(--tile-dim) * -2) 0 no-repeat;
     border: 1px solid black;
 }
 
 .tile.blueHome
 {
     background: url(img/tiles_small.png) calc(var(--tile-dim) * -3) 0 no-repeat;
     border: 1px solid black;
 }
 
 /* When tiles are highlighted the background image shifts. This is to compensate for that. */

 .tile.redHome.legalMove {
    background: url(img/tiles_small.png) -6px -6px no-repeat;
    border: none;
 }

.tile.yellowHome.legalMove {
    background: url(img/tiles_small.png) calc(var(--tile-dim) * -1 - 6px) -6px no-repeat;
    border: none;
}

.tile.greenHome.legalMove {
    background: url(img/tiles_small.png) calc(var(--tile-dim) * -2 - 6px) -6px no-repeat;
    border: none;
}

.tile.blueHome.legalMove {
    background: url(img/tiles_small.png) calc(var(--tile-dim) * -3 - 6px) -6px no-repeat;
    border: none;
}

 .tile.red
 {
     background: url(img/tiles_small.png) var(--solid-tile-offset) 0 no-repeat;
 }
 
 .tile.yellow
 {
     background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - var(--tile-dim))  no-repeat;
 }
 
 .tile.green
 {
     background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - var(--tile-dim) * 2)  no-repeat;
 }
 
 .tile.blue
 {
     background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - var(--tile-dim) * 3)  no-repeat;
 }

 /* When tiles are highlighted the background image shifts. This is to compensate for that. Only matters for color blind tiles */

 
 .tile.red.legalMove
 {
     background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - 6px) -6px no-repeat;
     border: none;
 }
 
 .tile.yellow.legalMove
 {
     background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - var(--tile-dim) - 6px) -6px no-repeat;
     border: none;
 }

.tile.green.legalMove
{
    background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - var(--tile-dim) * 2 - 6px) -6px no-repeat;
    border: none;
}

.tile.blue.legalMove
{
    background: url(img/tiles_small.png) calc(var(--solid-tile-offset) - var(--tile-dim) * 3 - 6px) -6px no-repeat;
    border: none;
}
 /* resource styles */
 
 .bank {
     display: flex;
     justify-content: center;
     align-items: center;
     flex-direction: column;
     margin-top: 10px;
     border-radius: 10px;
     border: 0px solid var(--highlight-color);
     padding: 2px;
     background-color: #CCCCCC; /* Light golden color to represent money */
     box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
     transition: transform 1s, box-shadow 0.3s, border 0.3s; /* Add transition for smooth effect */
 }
 
 .resource.highlighted, .bank.highlighted {
    border: 2px solid var(--highlight-color); /* Highlight border color */
    box-shadow: 0 0 15px var(--highlight-color); /* Highlight glow effect */
 }

 .resource {
     width: var(--resource-dim);
     height: var(--resource-dim);
     filter: drop-shadow(3px 3px 3px #444);
 }
 
 
 .resource.red
 {
     background: url(img/resource_tokens_small.png) 0 0 no-repeat;
 }
 
 .resource.yellow
 {
     background: url(img/resource_tokens_small.png) calc(var(--resource-dim) * -1) 0 no-repeat;
 }
 
 .resource.green
 {
     background: url(img/resource_tokens_small.png) calc(var(--resource-dim) * -2) 0 no-repeat;
 }
 
 .resource.blue
 {
     background: url(img/resource_tokens_small.png) calc(var(--resource-dim) * -3) 0 no-repeat;
 }

 .resourceContainer {
     display: flex;
     justify-content: center;
     align-items: center;
     flex-direction: row;
     padding: 3px;
 }

 .icon
 {
     width: var(--resource-dim);
     height: var(--resource-dim);
     display: inline-block;
     vertical-align: middle;
     transform: scale(0.5);
     margin-left: -.4em; /* Adjust the left margin to move the icon closer to the text */
     margin-right: -.4em; /* Adjust the right margin to move the icon closer to the text */
     margin-bottom: -.2em; /* Adjust the bottom margin to align the icon with the text */
     margin-top: -.4em; /* Adjust the top margin to align the icon with the text */
     
 }
 .icon.red
 {
     background: url(img/resource_tokens_small.png) 0 0 no-repeat;
 }
 
 .icon.yellow
 {
     background: url(img/resource_tokens_small.png) calc(var(--resource-dim) * -1) 0 no-repeat;
 }
 
 .icon.green
 {
     background: url(img/resource_tokens_small.png) calc(var(--resource-dim) * -2) 0 no-repeat;
 }
 
 .icon.blue
 {
     background: url(img/resource_tokens_small.png) calc(var(--resource-dim) * -3) 0 no-repeat;
 }
 
 .playerPanelNumber {
    font-family: "DM Sans", serif;
    font-optical-sizing: auto;
    font-weight: 600;
    font-style: normal;
    color: black;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* Add a subtle shadow */
    margin-right: 2px;
    margin-top: 5px;
    transition: color 0.5s;
 }

 .playerPanelNumber.red
 {
    color: red;
 }

 /* Tableau styles */
 
 .tableauContainer {
     display: block;
     margin-right:10px;
 }
 
 .tableau {
     margin: 10px;
     display: inline-block;
     background-color: var(--panel-color);
     padding: 10px;
     border-radius: 4px;
     width: 99%; /* leave a small gap on the right */
     min-width: calc(var(--store-width) + var(--board-dim) + 12px); 
 }

 .actionCubeBorder {
     margin-right: 10px;
     height: var(--action-board-selection-dim);
     width: var(--action-board-selection-dim);
     border: 4px solid black;
     border-style: inset;
 }

 .actionCubeContainer {
     margin: -5px;
     height: var(--action-board-selection-dim);
     width: var(--action-board-selection-dim);
 }

 .actionCube {
    position: absolute;
     height: var(--action-board-selection-dim);
     width: var(--action-board-selection-dim);
     background: url(img/cube.png) 0 0 no-repeat;
     pointer-events: none;
     z-index: var(--z-index-piece);
 }

 /* selected for this actually means the cube is gone
 .actionCube.unselected {
     background: none;
 } */
 
 .cardRow.tableauTopRowContainer, .cardRow.tableauCardContainer {
     align-items: left;
     justify-content: left;
     flex-wrap: wrap;
 }
 
 .tableauLabel {
     font-family: "DM Sans", serif;
     font-optical-sizing: auto;
     font-weight: 700;
     font-style: normal;
     text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* Add a subtle shadow */
     color:white;
     padding-left: 10px;
     padding-right: 10px;
     padding-top: 2px;
     padding-bottom: 2px;
     border-radius: 4px;
     display: inline-block;
     margin-bottom: 2px;
     border: 1px solid black;
    margin-right:35px;
 }
 
 .tableauLabel.red {background-color: red;}
 .tableauLabel.yellow {background-color: yellow; color: black;}
 .tableauLabel.green {background-color: green;}
 .tableauLabel.blue {background-color: blue;}
 
 .cardTarget {
     height:var(--card-height);
     width: var(--card-width);
 }
 
 .storecard, .card {
     height:var(--card-height);
     width: var(--card-width);
     background: url(img/cards_small.png) 0 0 no-repeat;
     border-radius: 4px;
     filter: drop-shadow(3px 3px 3px #444);
     z-index: var(--z-index-card);
     backface-visibility: hidden;
     transition: transform 1s, filter 1s, box-shadow 0.3s, border 0.3s; /* Add transition for smooth effect */
}

.storecard {
    position:absolute;
    transform-style: preserve-3d;
}
 .card.active {
    transform: translateY(-20px);
 }

 .card.exhausted {
    filter: brightness(70%);
    transform: translateY(0px);
 }

 .storecard.back {
    background: url(img/card_back_small.png) 0 0 no-repeat;
    transform: rotateY(180deg);
    backface-visibility: visible;
    /* z-index: calc(var(--z-index-card) + 1); */
 }

 .storecard.flip, .storecard.back.flip {
	transform: perspective(200px) rotateY(180deg);
}

.storecard.back.flip {
    transform: perspective(200px) rotateY(360deg);
    transition-duration: 1s;
}

 .storecard.highlighted, .card.highlighted {
    height: calc(var(--card-height) + 4px);
    width: calc(var(--card-width) + 4px);
    border: 2px solid var(--highlight-color); /* Highlight border color */
    border-radius: 6px;
    box-shadow: 0 0 15px var(--highlight-color); /* Highlight glow effect */
    
}

.card.highlighted {
    transform: translateY(-20px) scale(1.1); /* Slightly enlarge the card */
}

.storecard.highlighted {
    transform: scale(1.1); /* Slightly enlarge the card */
} 

 
 .actionBoard {
     position: relative;
     height:var(--action-board-height);
     width: var(--action-board-width);
     background: url(img/action_board.png) 0 0;
     border-radius: 4px;
     margin-bottom:5px;
     margin-right:10px;
     box-shadow: 3px 3px 3px #444;
 }
 
 .actionBoardSelectionTarget {
     position: absolute;
     height:var(--action-board-selection-dim);
     width: var(--action-board-selection-dim);
 }

 .actionBoardSelectionTarget.selected 
 {
    background: url(img/cube.png) 0 0 no-repeat; margin: -5px;
 }
 

 @keyframes rotate {
	100% {
		transform: rotate(1turn);
	}
}

.legalMove {
	position: relative;
	z-index: 0;
	width: var(--tile-dim);
	height: var(--tile-dim);
	overflow: hidden;
	padding: 2rem;
	
	&::before {
		content: '';
		position: absolute;
		z-index: -2;
		left: -50%;
		top: -50%;
		width: 200%;
		height: 200%;
		background-color: #399953;
		background-repeat: no-repeat;
		background-size: 50% 50%, 50% 50%;
		background-position: 0 0, 100% 0, 100% 100%, 0 100%;
		background-image: linear-gradient(#399953, #399953), linear-gradient(#fbb300, #fbb300), linear-gradient(#d53e33, #d53e33), linear-gradient(#377af5, #377af5);
		animation: rotate 4s linear infinite;
	}

    &::after {
		content: '';
		position: absolute;
		z-index: -1;
		left: 6px;
		top: 6px;
		width: calc(100% - 12px);
		height: calc(100% - 12px);
		background : inherit;
		border-radius: 5px;
	}
}



